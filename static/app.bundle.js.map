{"version":3,"sources":["webpack://glub/./src/App.jsx","webpack://glub/./src/IssueAdd.jsx","webpack://glub/./src/IssueFilter.jsx","webpack://glub/./src/IssueList.jsx","webpack://glub/webpack/bootstrap","webpack://glub/webpack/runtime/define property getters","webpack://glub/webpack/runtime/hasOwnProperty shorthand","webpack://glub/webpack/runtime/make namespace object","webpack://glub/webpack/runtime/jsonp chunk loading","webpack://glub/webpack/startup"],"names":["contentNode","document","getElementById","ReactDOM","module","IssueAdd","handleSubmit","bind","e","preventDefault","form","forms","issueAdd","props","createIssue","owner","value","title","status","create","Date","React","IssueFilter","IssueRow","issue","_id","created","toDateString","effort","completionDate","IssueTable","issueRows","issues","map","IssueList","state","createTestIssue","loadData","fetch","then","response","ok","json","data","console","log","_metadata","total_count","records","forEach","setState","error","alert","message","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import IssueList from './IssueList.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst contentNode = document.getElementById('contents');\nReactDOM.render(<IssueList/>,contentNode);\n\nif (module.hot){\n    module.hot.accept();\n}","import React from 'react';\n\nexport default class IssueAdd extends React.Component{\n    constructor(){\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        var form = document.forms.issueAdd;\n        this.props.createIssue({\n            owner: form.owner.value,\n            title: form.title.value,\n            status: 'New',\n            create: new Date(),\n        });\n        // clear the form for the next input\n        form.owner.value = \"\"; form.title.value = \"\";\n    }\n\n    render() {\n        return (\n            <div>\n                <form name =\"issueAdd\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"owner\" placeholder=\"Owner\"/>\n                    <input type=\"text\" name=\"title\" placeholder=\"Title\"/>\n                    <button>Glub</button>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class IssueFilter extends React.Component {\n    render(){\n        return (\n            <div><b>Spaceholder</b> for the Issue Filter.glub üêü</div>\n        )\n    }\n}","import React from 'react';\nimport 'whatwg-fetch';\n\nimport IssueAdd from './IssueAdd.jsx'\nimport IssueFilter from './IssueFilter.jsx'\n\nconst IssueRow = (props) => (\n    <tr>\n        <td>{props.issue._id}</td>\n        <td>{props.issue.status}</td>\n        <td>{props.issue.owner}</td>\n        <td>{props.issue.created.toDateString()}</td>\n        <td>{props.issue.effort}</td>\n        <td>{props.issue.completionDate ? \n                props.issue.completionDate.toDateString() : ''}</td>\n        <td>{props.issue.title}</td>\n    </tr>\n)\n\nfunction IssueTable(props){\n    const issueRows = props.issues.map( issue => \n        <IssueRow key={issue._id} issue={issue}/>\n    )\n    return (\n        <table className=\"bordered-table\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Status</th>\n                    <th>Owner</th>\n                    <th>Created</th>\n                    <th>Effort</th>\n                    <th>Completion Date</th>\n                    <th>Title</th>\n            </tr>\n            </thead>\n            <tbody>{issueRows}</tbody>\n        </table>\n    )\n}\n\nexport default class IssueList extends React.Component{\n    constructor(){\n        super();\n        this.state = {issues: []};\n\n        this.createIssue = this.createIssue.bind(this);\n        this.createTestIssue = this.createTestIssue.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadData();\n    }\n\n    loadData(){\n        fetch('/api/issues').then(response => {\n            if(response.ok){\n                response.json().then(data=>{\n                console.log(\"Total count of records:\", data._metadata.total_count);\n                data.records.forEach(issue=>{\n                    issue.created = new Date(issue.created);\n                    if(issue.completionDate)\n                        issue.completionDate = new Date(issue.completionDate);\n                    });\n                this.setState({issues: data.records });\n                });\n            } else {\n                response.json().then(error=>{\n                    alert(\"Failed to fetch issues: \"+ error.message)\n                })\n            }\n        }).catch(err => {\n            console.log(\"Error in fetching data from server:\",err);\n        });\n    }\n\n    createIssue(newIssue){\n        fetch('/api/issues',{\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newIssue),\n        }).then(response => {\n            if(response.ok){\n                response.json().then(updatedIssue => {\n                    updatedIssue.created = new Date(updatedIssue.created);\n                    if (updatedIssue.completionDate)\n                        updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n                    const newIssues = this.state.issues.concat(updatedIssue);\n                    this.setState({ issues: newIssues });\n                })\n            } else {\n                response.json().then(error=>{\n                    alert(\"Failed to add issue: \" + error.message)\n                });\n            }\n        }).catch(err => {\n            alert(\"Error in sending glub to server: \" + err.message);\n        });\n    }\n\n    createTestIssue(){\n        this.createIssue({\n            status: 'New', owner: 'finchboat', created: new Date(),\n            title: 'your TV has no COMPUTE, plz insert computer'\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Issue Tracker</h1>\n                <IssueFilter />\n                <hr/>\n                <IssueTable issues={this.state.issues}/>\n                <button onClick={this.createTestIssue}>Glub</button>\n                <hr/>\n                <IssueAdd createIssue={this.createIssue}/>\n            </div>\n        )\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"app\": 0\n};\n\nvar deferredModules = [\n\t[\"./src/App.jsx\",\"vendor\"]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = () => {\n\n};\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = () => {\n\n\t\t}\n\t}\n\treturn result;\n}\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = () => {\n\n\t}\n\tchunkLoadingGlobal = chunkLoadingGlobal.slice();\n\tfor(var i = 0; i < chunkLoadingGlobal.length; i++) webpackJsonpCallback(chunkLoadingGlobal[i]);\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tparentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkglub\"] = self[\"webpackChunkglub\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = webpackJsonpCallback;","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}